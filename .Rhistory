glass_type <- rev(levels(Glass$Type))
dend <- as.dendrogram(glass)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(6)[sort_levels_values(
as.numeric(Glass[,10])[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(Glass$Type)[order.dendrogram(dend)])
# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = rainbow_hcl(6))
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
data(Glass)
glass <- Glass %>%
select(Na:Fe) %>%
scale() %>%
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "complete")
type_labels <- Glass$Type
type_col <- rev(rainbow_hcl(6))[as.numeric(type_labels)]
glass_type <- rev(levels(Glass$Type))
dend <- as.dendrogram(glass)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(6)[sort_levels_values(
as.numeric(Glass[,10])[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(Glass$Type)[order.dendrogram(dend)])
# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = rainbow_hcl(6))
?rotate
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
data(Glass)
glass <- Glass %>%
select(Na:Fe) %>%
scale() %>%
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "complete")
type_labels <- Glass$Type
type_col <- rev(rainbow_hcl(6))[as.numeric(type_labels)]
glass_type <- rev(levels(Glass$Type))
dend <- as.dendrogram(glass)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(6)[sort_levels_values(
as.numeric(Glass[,10])[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(Glass$Type)[order.dendrogram(dend)])
# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = rainbow_hcl(6))
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
data(Glass)
glass <- Glass %>%
select(Na:Fe) %>%
scale() %>%
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "Ward.D2")
type_labels <- Glass$Type
type_col <- rev(rainbow_hcl(6))[as.numeric(type_labels)]
glass_type <- rev(levels(Glass$Type))
dend <- as.dendrogram(glass)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(6)[sort_levels_values(
as.numeric(Glass[,10])[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(Glass$Type)[order.dendrogram(dend)])
# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = rainbow_hcl(6))
type_col <- rev(rainbow_hcl(6))[as.numeric(glass_type)]
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
data(Glass)
glass <- Glass %>%
select(Na:Fe) %>%
scale() %>%
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "complete")
type_labels <- Glass$Type
glass_type <- rev(levels(Glass$Type))
type_col <- rev(rainbow_hcl(6))[as.numeric(glass_type)]
dend <- as.dendrogram(glass)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(6)[sort_levels_values(
as.numeric(Glass[,10])[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(Glass$Type)[order.dendrogram(dend)])
# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = type_col)
d_iris <- dist(iris2) # method="man" # is a bit better
hc_iris <- hclust(d_iris, method = "complete")
iris_species <- rev(levels(iris[,5]))
pairs(glass, col = type_col,
lower.panel = NULL,
cex.labels=2, pch=19, cex = 1.2)
glass2<-Glass %>%
select(Na:Fe)
pairs(glass2, col = type_col,
lower.panel = NULL,
cex.labels=2, pch=19, cex = 1.2)
par(las = 1, mar = c(4.5, 3, 3, 2) + 0.1, cex = .8)
MASS::parcoord(glass2, col = type_col, var.label = TRUE, lwd = 2)
data("USArrests")
res.hc <- USArrests %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
View(USArrests)
par(las = 1, mar = c(4.5, 3, 3, 2) + 0.1, cex = .8)
MASS::parcoord(USArrests, var.label = TRUE, lwd = 2)
levles(USArrests)
levals(USArrests)
levels(USArrests)
row.names(USArrests)
USArrests$state<-row.names(USArrests)
View(USArrests)
library(factoextra)
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
data(poison)
View(poison)
data("housetasks")
View(housetasks)
data("decathlon2")
df <- decathlon2[1:23, 1:10]
View(df)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
View(mtcars)
unique(mtcars$cyl)
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rev(rainbow_hcl(3))[as.numeric(cyl_type)]
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rev(rainbow_hcl(3))[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = glass_type, fill = type_col)
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rev(rainbow_hcl(3))[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = cyl_col)
legend("topleft", legend = mtcars$cyl, fill = cyl_col)
cyl_type
levels(mtcars$cyl)
mtcars$cyl
is.numeric(mtcars$cyl)
levels(mtcars$cyl) <- mtcars$cyl
levels(mtcars$cyl) <- unique(mtcars$cyl)
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
levels(mtcars$cyl) <- unique(mtcars$cyl)
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rev(rainbow_hcl(3))[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = cyl_col)
cyl_col
cyl_type
cyl_col <- rainbow_hcl(3)[as.numeric(cyl_type)]
cyl_type
cyl_col
cyl_col <- rainbow_hcl(3)[cyl_type]
cyl_col
rainbow_hcl(3)[cyl_type]
library(colorspace) # get nice colors
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = rainbow_hcl(3))
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
mtcars$cyl[order.dendrogram(dend)]
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
rainbow_hcl(3)[as.numeric(mtcars$cyl)[order.dendrogram(dend)]]
rainbow_hcl(3)[as.numeric(mtcars$cyl)][order.dendrogram(dend)]
rainbow_hcl(3)[as.numeric(mtcars$cyl)]
rainbow_hcl()[as.numeric(mtcars$cyl)]
rainbow_hcl(3)mtcars$cyl
rainbow_hcl(3)[mtcars$cyl]
rainbow_hcl(3)[levels(mtcars$cyl)]
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
levels(mtcars$cyl) <- unique(mtcars$cyl)
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rainbow_hcl(3)[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
# dend <- color_branches(dend, k=6)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = rainbow_hcl(3))
cyl_type
cyl_col
rainbow_hcl(cyl_type)
rainbow_hcl(levels(cyl_type))
levels(cyl_type)
rainbow_hcl(levels(mtcars$cyl))
levels(mtcars$cyl)
rainbow_hcl(levels(unique(mtcars$cyl)))
cyl_type <- rev(levels(unique(mtcars$cyl)))
cyl_type
cyl_type <- rev(levels(mtcars$cyl))
cyl_type
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
levels(mtcars$cyl) <- unique(mtcars$cyl)
cyl_type <- rev(levels(mtcars$cyl))
cyl_col <- rainbow_hcl(3)[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
dend <- color_branches(dend, k=3)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = rainbow_hcl(3))
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
type_labels <- mtcars$cyl
levels(mtcars$cyl) <- unique(mtcars$cyl)
cyl_type <- levels(mtcars$cyl)
cyl_col <- rainbow_hcl(3)[as.numeric(cyl_type)]
dend <- as.dendrogram(res.hc)
# order it the closest we can to the order of the observations:
# dend <- rotate(dend, 1:214)
# Color the branches based on the clusters:
dend <- color_branches(dend, k=3)
# , groupLabels=glass_type)
# Manually match the labels, as much as possible, to the real classification of the flowers:
labels_colors(dend) <-
rainbow_hcl(3)[sort_levels_values(
as.numeric(mtcars$cyl)[order.dendrogram(dend)]
)]
# We shall add the flower type to the labels:
labels(dend) <- paste(as.character(mtcars$cyl)[order.dendrogram(dend)],
"(",labels(dend),")",
sep = "")# We hang the dendrogram a bit:
# dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", .5)
# And plot:
par(mar = c(3,3,3,7))
plot(dend,
main = "Glass",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = cyl_type, fill = rainbow_hcl(3))
library(dendextend)
library(mlbench)
library(tidyverse)
library(colorspace) # get nice colors
library(factoextra)
res.hc <- mtcars %>%
scale() %>%                    # Scale the data
dist(method = "euclidean") %>% # Compute dissimilarity matrix
hclust(method = "ward.D2")
fviz_dend(res.hc, rect = TRUE, cex = 0.5)
install.packages("openssl")
install.packages("askpass")
install.packages("openssl")
