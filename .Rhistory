blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo(version = "0.63.1", force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
servr::daemon_stop(9)
blogdown:::serve_site()
library(knitr)
library(kableExtra)
library(readr)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
profs %>%
kable %>%
kable_styling()
library(knitr)
library(kableExtra)
library(readr)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
profs %>%
kable
install.packages(c("DT", "knitr"))
library(knitr)
library(kableExtra)
library(readr)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
profs %>%
kable %>%
kable_styling()
library(knitr)
library(kableExtra)
library(readr)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
head(profs)
# profs %>%
#   kable %>%
#   kable_styling()
library(knitr)
library(kableExtra)
library(readr)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
DT(profs)
library(knitr)
library(kableExtra)
library(readr)
library(DT)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
DT(profs)
library(knitr)
library(kableExtra)
library(readr)
library(DT)
profs <- read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
datatable(profs)
# profs %>%
#   kable %>%
#   kable_styling()
read_csv()
?read_csv()
library(knitr)
library(kableExtra)
library(readr)
library(DT)
profs <- readr::read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
profs %>%
kable %>%
kable_styling()
library(knitr)
library(kableExtra)
library(readr)
library(DT)
readr::read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
# profs %>%
#   kable %>%
#   kable_styling()
library(knitr)
library(kableExtra)
library(readr)
profs <- readr::read_csv("https://github.com/ScottStetkiewicz/AcademicNetworks/blob/master/profs.csv")
profs %>%
kable %>%
kable_styling()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse)
library(xml2)
library(rvest)
library(stringr)
library(jsonlite)
library(leaflet)
library(htmltools)
url <- "https://www.indeed.co.uk/jobs?q=Archaeology"
webpage <- read_html(url)
df <- webpage %>%
html_nodes('.jobsearch-SerpJobCard') %>%
map_df(~list(Title = html_nodes(.x, '.jobtitle') %>%
html_text() %>%
{if(length(.) == 0) NA else .},
Salary = html_nodes(.x, '.salary') %>%
html_text() %>%
{if(length(.) == 0) NA else .},
Employer = html_nodes(.x, '.company') %>%
html_text() %>%
{if(length(.) == 0) NA else .},
Location = html_nodes(.x, '.location') %>%
html_text() %>%
{if(length(.) == 0) NA else .},
Postdate = html_nodes(.x, '.date') %>%
html_text() %>%
{if(length(.) == 0) NA else .}))
df <- df %>%
mutate(if(is.numeric(Salary)){salary2=parse_number(Salary)}else{salary2="NA"})
nominatim_osm <- function(address = NULL)
{
if(suppressWarnings(is.null(address)))
return(data.frame("NA"))
tryCatch(
d <- jsonlite::fromJSON(flatten = TRUE,
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=1&limit=1')
), error = function(c) return(data.frame("NA"))
)
if(length(d) == 0) return(data.frame("NA"))
return(data.frame(lon = as.numeric(d$lon), lat = as.numeric(d$lat), District = if(is.null(d$address.state_district)){paste("Not Available")} else {as.character(d$address.state_district)}, State = if(is.null(d$address.state)){paste("Not Available")} else {as.character(d$address.state)}, Country = as.character(d$address.country)))
}
addresses <- df$Location
d <- suppressWarnings(lapply(addresses, function(address) {
api_output <- nominatim_osm(address)
return(data.frame(address = address, api_output))
}) %>%
bind_rows() %>% data.frame())
test2<-cbind(d,df)
# Jitter points in case multiple jobs are in the same city
test2$lat <- jitter(test2$lat, factor = 1)
test2$lon <- jitter(test2$lon, factor = 1)
test2 <- test2 %>%
mutate(Color_code = case_when(
is.na(test2$salary2) ~ "gray",
test2$salary2 == 0.00 ~ "gray",
test2$salary2 <= 20000 ~ "red",
test2$salary2 >= 20000 & test2$salary2 <= 29999 ~ "orange",
test2$salary2 >= 30000 & test2$salary2 <= 39999 ~ "blue",
test2$salary2 >= 40000 ~ "green"
))
View(test2)
View(df)
View(df)
df <- df %>%
mutate(salary2=parse_number(Salary))
# mutate(if(is.numeric(Salary)){salary2=parse_number(Salary)}else{salary2="NA"})
View(df)
View(df)
addresses <- df$Location
d <- suppressWarnings(lapply(addresses, function(address) {
api_output <- nominatim_osm(address)
return(data.frame(address = address, api_output))
}) %>%
bind_rows() %>% data.frame())
test2<-cbind(d,df)
# Jitter points in case multiple jobs are in the same city
test2$lat <- jitter(test2$lat, factor = 1)
test2$lon <- jitter(test2$lon, factor = 1)
test2 <- test2 %>%
mutate(Color_code = case_when(
is.na(test2$salary2) ~ "gray",
test2$salary2 == 0.00 ~ "gray",
test2$salary2 <= 20000 ~ "red",
test2$salary2 >= 20000 & test2$salary2 <= 29999 ~ "orange",
test2$salary2 >= 30000 & test2$salary2 <= 39999 ~ "blue",
test2$salary2 >= 40000 ~ "green"
))
test2 <- test2 %>% rename(Salary_low=salary2,Post_date=Postdate)
test2 <- test2 %>% select(Title,Location,Employer,Salary,lon,lat,Salary_low,Color_code,District,Country,State,Post_date)
labs <- lapply(seq(nrow(test2)), function(i) {
paste0( '<p>', "<b>Employer:</b>",test2[i, "employer"], '<p></p>',
"<b>Position: </b>",test2[i, "titles"], ', ',
test2[i, "location"],'</p><p>',
"<b>Salary: </b>",test2[i, "Salary"], '</p>' )
})
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
labs <- lapply(seq(nrow(test2)), function(i) {
paste0( '<p>', "<b>Employer:</b>",test2[i, "company"], '<p></p>',
"<b>Position: </b>",test2[i, "jobtitle"], ', ',
test2[i, "location"],'</p><p>',
"<b>Salary: </b>",test2[i, "Salary"], '</p>' )
})
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
labs <- lapply(seq(nrow(test2)), function(i) {
paste0( '<p>', "<b>Employer:</b>",test2[i, "Employer"], '<p></p>',
"<b>Position: </b>",test2[i, "Title"], ', ',
test2[i, "location"],'</p><p>',
"<b>Salary: </b>",test2[i, "Salary"], '</p>' )
})
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
labs <- lapply(seq(nrow(test2)), function(i) {
paste0( '<p>', "<b>Employer:</b>",test2[i, "Employer"], '<p></p>',
"<b>Position: </b>",test2[i, "Title"], ' ',
test2[i, "location"],'</p><p>',
"<b>Salary: </b>",test2[i, "Salary"], '</p>' )
})
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
addresses <- df$Location
d <- suppressWarnings(lapply(addresses, function(address) {
api_output <- nominatim_osm(address)
return(data.frame(address = address, api_output))
}) %>%
bind_rows() %>% data.frame())
test2<-cbind(d,df)
# Jitter points in case multiple jobs are in the same city
test2$lat <- jitter(test2$lat, factor = 1.5)
test2$lon <- jitter(test2$lon, factor = 1.5)
test2 <- test2 %>%
mutate(Color_code = case_when(
is.na(test2$salary2) ~ "gray",
test2$salary2 == 0.00 ~ "gray",
test2$salary2 <= 20000 ~ "red",
test2$salary2 >= 20000 & test2$salary2 <= 29999 ~ "orange",
test2$salary2 >= 30000 & test2$salary2 <= 39999 ~ "blue",
test2$salary2 >= 40000 ~ "green"
))
test2 <- test2 %>% rename(Salary_low=salary2,Post_date=Postdate)
test2 <- test2 %>% select(Title,Location,Employer,Salary,lon,lat,Salary_low,Color_code,District,Country,State,Post_date)
labs <- lapply(seq(nrow(test2)), function(i) {
paste0( '<p>', "<b>Employer:</b>",test2[i, "Employer"], '<p></p>',
"<b>Position: </b>",test2[i, "Title"], ' ',
test2[i, "location"],'</p><p>',
"<b>Salary: </b>",test2[i, "Salary"], '</p>' )
})
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
blogdown:::serve_site()
head(test2)
blogdown:::build_site()
library(kableExtra)
test2 %>%
kable %>%
kable_styling()
library(kableExtra)
head(test2) %>%
kable %>%
kable_styling()
blogdown:::serve_site()
blogdown:::serve_site()
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
textsize = "20px",
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(
style=list(
textsize = "30px",
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(textsize = "30px",
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
leaflet(test2) %>% addTiles() %>%
addAwesomeMarkers(~lon, ~lat, popup = ~Salary, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = test2$Color_code),
label = lapply(labs, htmltools::HTML),labelOptions = labelOptions(textsize = "15px",
style=list(
'background'='rgba(243, 241, 239, 1)',
'border-color' = 'rgba(46, 49, 49, 1)',
'border-radius' = '2px',
'border-style' = 'solid',
'border-width' = '2px'))) %>%
addLegend("bottomright",
colors =c("#70AF28",  "#38ADDF", "	#F79530", "#CC3E24", "#575556"),
labels= c("Over £40,000","£30,000 - £39,999","£20,000 - £29,999","Below £20,000","Rate Unavailable"),
title= "Salary",
opacity = 1)
blogdown:::serve_site()
install.packages("magick")
library(tidyverse)
library(xml2)
library(rvest)
library(stringr)
library(jsonlite)
library(leaflet)
library(htmltools)
library(kableExtra)
library(magick)
install.packages("magick")
install.packages("magick")
install.packages("magick")
library(tidyverse)
library(xml2)
library(rvest)
library(stringr)
library(jsonlite)
library(leaflet)
library(htmltools)
library(kableExtra)
library(magick)
opts_template$set(squarefigure = list(fig.height = 6, fig.width = 6))
blogdown:::serve_site()
library(tidyverse)
library(xml2)
library(rvest)
library(stringr)
library(jsonlite)
library(leaflet)
library(htmltools)
library(kableExtra)
library(knitr)
library(magick)
opts_template$set(squarefigure = list(fig.height = 6, fig.width = 6))
blogdown:::serve_site()
![](/docs/scrape/scrape2.png)
library(readr)
Physics_Final_Jeopardy_ <- read_csv("~/Desktop/Physics Final Jeopardy!.csv")
View(Physics_Final_Jeopardy_)
names<-Physics_Final_Jeopardy_[,2]
View(names)
names2<-substr(names, 1, 3)
View(names2)
Physics_Final_Jeopardy_$name <- gsub("^.{0,3}", "", Physics_Final_Jeopardy_$$[,2])
Physics_Final_Jeopardy_$name <- gsub("^.{0,3}", "", Physics_Final_Jeopardy_[,2])
Physics_Final_Jeopardy_$name
Physics_Final_Jeopardy_$name <- gsub("^.{0,3}", "", Physics_Final_Jeopardy_[,2])
Physics_Final_Jeopardy_$name <- substring(Physics_Final_Jeopardy_[,2], 3)
View(Physics_Final_Jeopardy_$name)
Physics_Final_Jeopardy_[,2]  = substr(Physics_Final_Jeopardy_[,2],1,nchar(Physics_Final_Jeopardy_[,2])-3)
View(Physics_Final_Jeopardy_[,2])
stringr::str_extract(Physics_Final_Jeopardy_, "^.{2}")
library(readr)
Physics_Final_Jeopardy_ <- read_csv("~/Desktop/Physics Final Jeopardy!.csv")
View(Physics_Final_Jeopardy_)
names<-Physics_Final_Jeopardy_[,2]
View(names)
stringr::str_extract(names, "^.{2}")
substring(names, 2)
library(stringi)
stri_sub(names,2)
stri_sub(names[,1],2)
stri_sub(names[1],2)
is.character(names)
typeof(names)
for(i in 1: length(names)
{
stri_sub(names,2)
}
for(i in 1: length(names)
{
substring(i, 2)
}
for(i in 1: length(names)
{
substring(x, 2)
}
jeo<-Physics_Final_Jeopardy_
jeo$names<-jeo[,2]
jeo$names
jeo$names = substr(jeo$names,1,nchar(jeo$names)-2)
jeo$names
jeo$names = substr(jeo$names,1,nchar(jeo$names)-2)
View(jeo$names)
is.data.frame(jeo)
jeo$names<-jeo[,2]
View(jeo$names)
View(jeo)
jeo[,2]<-jeo$names
View(jeo)
View(jeo[,2])
jeo$names<-jeo$`#SPILL!`
View(jeo)
head(jeo)
jeo$`#SPILL!`<-jeo$names
View(jeo)
colnames(jeo)[colnames(jeo) == "#SPILL!"] <- "names"
View(jeo)
jeo$names = substr(jeo$names,1,nchar(jeo$names)-2)
View(jeo)
jeo$names = substr(jeo$names,1,nchar(jeo$names)2)
jeo$names = substr(jeo$names,1,nchar(jeo$names),2)
jeo$names = substr(jeo$names,1,nchar(jeo$names),+2)
jeo$names = substr(jeo$names,3,nchar(jeo$names))
View(jeo)
jeo$names = substr(jeo$names,1,nchar(jeo$names)-12)
View(jeo)
setwd("~/Desktop")
write.csv(jeo, "jeopardy.csv")
